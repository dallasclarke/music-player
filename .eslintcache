[{"/home/dallasclarke/Documents/Code/fun-project/music-player/src/App.js":"1","/home/dallasclarke/Documents/Code/fun-project/music-player/src/components/CurrentSong/CurrentSong.js":"2","/home/dallasclarke/Documents/Code/fun-project/music-player/src/components/MusicPlayer/MusicPlayer.js":"3","/home/dallasclarke/Documents/Code/fun-project/music-player/src/components/SongList/SongList.js":"4"},{"size":2304,"mtime":1607123679251,"results":"5","hashOfConfig":"6"},{"size":617,"mtime":1607110362673,"results":"7","hashOfConfig":"6"},{"size":1553,"mtime":1607123715896,"results":"8","hashOfConfig":"6"},{"size":583,"mtime":1607121893479,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1ckz42d",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dallasclarke/Documents/Code/fun-project/music-player/src/App.js",["20","21","22"],"import React from \"react\";\nimport { SpotifyApiContext } from \"react-spotify-api\";\nimport cookie from \"react-cookies\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\nimport \"./App.css\";\nimport MusicPlayer from \"./components/MusicPlayer/MusicPlayer\";\nimport CurrentSong from \"./components/CurrentSong/CurrentSong\";\nimport SongList from \"./components/SongList/SongList\";\nimport SpotifyWebPlayer from \"react-spotify-web-playback\";\n\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\nconst clientId = \"3cd7985d72ce4ccc985472026a64d57b\";\nconst redirectUri = \"http://localhost:3000/\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n  \"user-read-email\",\n  \"user-read-private\",\n  \"streaming\",\n  \"user-modify-playback-state\",\n];\n\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function (initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nconst App = () => {\n  const [token, setToken] = React.useState();\n  const [song, setSong] = React.useState();\n\n  React.useEffect(() => {\n    let _token = cookie.load(\"token\");\n    if (hash.access_token) {\n      _token = hash.access_token;\n    }\n\n    if (_token) {\n      setToken(_token);\n      cookie.save(\"token\", _token, { path: \"/\" });\n    }\n  }, [hash.access_token]);\n  // console.log(token)\n  // console.log(song)\n  return (\n    <>\n      {token ? (\n        <div className=\"app\">\n          <SpotifyApiContext.Provider value={token}>\n            <>\n              <div styles={{ display: \"block\", float: \"left\", width: \"25%\" }}>\n                <SongList setSong={setSong} />\n              </div>\n              <div styles={{ display: \"block\", float: \"right\", width: \"70%\" }}>\n                <CurrentSong id={song} />\n                <MusicPlayer id={song} />\n              </div>\n            </>\n          </SpotifyApiContext.Provider>\n        </div>\n      ) : (\n        <a\n          href={`${authEndpoint}/?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n            \"%20\"\n          )}&response_type=token&show_dialog=true`}\n        >\n          Login to Spotify\n        </a>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","/home/dallasclarke/Documents/Code/fun-project/music-player/src/components/CurrentSong/CurrentSong.js",["23"],"import React from \"react\";\nimport \"./CurrentSong.css\"\nimport { Track } from \"react-spotify-api\";\n\nfunction CurrentSong ({id}) {\n    \n    return (\n      <Track id={id}>\n        {({ data, loading, error }) => {\n        //   console.log(data);\n          if (loading || !data) {\n              return <div>Loading</div> \n          } \n\n          return (\n          <div className=\"song\">\n            <img src={data.album.images[1].url} />\n            <h1>{data.name}</h1>\n            <h1>{data.artists.map(artist => `${artist?.name} `)}</h1>\n          </div>)\n        }}\n      </Track>\n    );\n}\n\nexport default CurrentSong;","/home/dallasclarke/Documents/Code/fun-project/music-player/src/components/MusicPlayer/MusicPlayer.js",["24","25","26","27"],"/home/dallasclarke/Documents/Code/fun-project/music-player/src/components/SongList/SongList.js",[],{"ruleId":"28","severity":1,"message":"29","line":4,"column":8,"nodeType":"30","messageId":"31","endLine":4,"endColumn":21},{"ruleId":"28","severity":1,"message":"32","line":10,"column":8,"nodeType":"30","messageId":"31","endLine":10,"endColumn":24},{"ruleId":"33","severity":1,"message":"34","line":51,"column":6,"nodeType":"35","endLine":51,"endColumn":25,"suggestions":"36"},{"ruleId":"37","severity":1,"message":"38","line":17,"column":13,"nodeType":"39","endLine":17,"endColumn":51},{"ruleId":"28","severity":1,"message":"40","line":8,"column":3,"nodeType":"30","messageId":"31","endLine":8,"endColumn":16},{"ruleId":"28","severity":1,"message":"41","line":15,"column":10,"nodeType":"30","messageId":"31","endLine":15,"endColumn":18},{"ruleId":"28","severity":1,"message":"42","line":15,"column":20,"nodeType":"30","messageId":"31","endLine":15,"endColumn":31},{"ruleId":"28","severity":1,"message":"43","line":20,"column":9,"nodeType":"30","messageId":"31","endLine":20,"endColumn":14},"no-unused-vars","'SpotifyPlayer' is defined but never used.","Identifier","unusedVar","'SpotifyWebPlayer' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has an unnecessary dependency: 'hash.access_token'. Either exclude it or remove the dependency array. Outer scope values like 'hash.access_token' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["44"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'faPauseCircle' is defined but never used.","'songInfo' is assigned a value but never used.","'setSongInfo' is assigned a value but never used.","'timer' is assigned a value but never used.",{"desc":"45","fix":"46"},"Update the dependencies array to be: []",{"range":"47","text":"48"},[1405,1424],"[]"]