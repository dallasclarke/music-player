[{"/Users/dallasclarke/Documents/Code-Immersives/Term-2/project/music-player/src/App.js":"1","/Users/dallasclarke/Documents/Code-Immersives/Term-2/project/music-player/src/components/MusicPlayer/MusicPlayer.js":"2","/Users/dallasclarke/Documents/Code-Immersives/Term-2/project/music-player/src/components/SongList/SongList.js":"3","/Users/dallasclarke/Documents/Code-Immersives/Term-2/project/music-player/src/components/SongList/ListStyling.js":"4","/Users/dallasclarke/Documents/Code-Immersives/Term-2/project/music-player/src/components/CurrentSong/CurrentSong.js":"5"},{"size":2793,"mtime":1607326104783,"results":"6","hashOfConfig":"7"},{"size":2143,"mtime":1607326795281,"results":"8","hashOfConfig":"7"},{"size":705,"mtime":1607321838747,"results":"9","hashOfConfig":"7"},{"size":1010,"mtime":1607319119279,"results":"10","hashOfConfig":"7"},{"size":617,"mtime":1607319119279,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"aukc4g",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dallasclarke/Documents/Code-Immersives/Term-2/project/music-player/src/App.js",["24","25","26","27"],"import React from \"react\";\nimport { SpotifyApiContext } from \"react-spotify-api\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {Grid, Paper} from \"@material-ui/core\";\nimport cookie from \"react-cookies\";\n\nimport \"./App.css\";\nimport MusicPlayer from \"./components/MusicPlayer/MusicPlayer\";\nimport CurrentSong from \"./components/CurrentSong/CurrentSong\";\nimport SongList from \"./components/SongList/SongList\";\nimport VirtualizedList from './components/SongList/ListStyling';\nimport defaultSong from \"./utils\";\n\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\nconst clientId = \"3cd7985d72ce4ccc985472026a64d57b\";\nconst redirectUri = \"http://localhost:3000/\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n  \"user-read-email\",\n  \"user-read-private\",\n  \"streaming\",\n  \"user-modify-playback-state\",\n];\n\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function (initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    margin: '0px'\n  },\n  paper: {\n    textAlign: 'left',\n    color: theme.palette.text.secondary,\n    background: theme.palette.success.light,\n  }\n}));\n\n\nconst App = () => {\n  const classes = useStyles();\n\n  const [token, setToken] = React.useState();\n  const [song, setSong] = React.useState();\n  const [isPlaying, setIsPlaying] = React.useState(false);\n\n  React.useEffect(() => {\n    let _token = cookie.load(\"token\");\n    if (hash.access_token) {\n      _token = hash.access_token;\n    }\n\n    if (_token) {\n      setToken(_token);\n      cookie.save(\"token\", _token, { path: \"/\" });\n    }\n  }, [hash.access_token]);\n  // console.log(token)\n  // console.log(song)\n  return (\n    <>\n      {token ? (\n        <div className=\"app\">\n          <SpotifyApiContext.Provider value={token}>\n            <>\n            <Grid container spacing={5} className={classes.grid}>\n              <div>\n                <SongList setSong={setSong} />\n              </div>\n              <div>\n                <CurrentSong id={song} />\n                <MusicPlayer \n                id={song} \n                setIsPlaying={setIsPlaying}\n                isPlaying={isPlaying}\n                />\n              </div>\n              </Grid>\n            </>\n          </SpotifyApiContext.Provider>\n        </div>\n      ) : (\n        <a\n          href={`${authEndpoint}/?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n            \"%20\"\n          )}&response_type=token&show_dialog=true`}\n        >\n          Login to Spotify\n        </a>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","/Users/dallasclarke/Documents/Code-Immersives/Term-2/project/music-player/src/components/MusicPlayer/MusicPlayer.js",["28","29","30"],"/Users/dallasclarke/Documents/Code-Immersives/Term-2/project/music-player/src/components/SongList/SongList.js",["31"],"import React from \"react\";\nimport { Playlist } from \"react-spotify-api\";\n\nimport \"./SongList.css\";\nimport VirtualizedList from \"./ListStyling\";\n\nconst SongList = ({ setSong }) => {\n  const trackList = (list) => {\n    //   console.log(list);\n    return list.map((item) => (\n      <p key={item.track.id} onClick={() => setSong(item?.track?.id)}>\n        {item?.track?.name}\n      </p>\n    ));\n  };\n\n  return (\n    <div className=\"songs\">\n      <Playlist id={\"37i9dQZEVXbMDoHDwVN2tF \"}>\n        {({ data, loading, error }) => {\n          // console.log(data)\n          return data ? trackList(data.tracks.items) : <div>no data</div>;\n        }}\n      </Playlist>\n    </div>\n  );\n};\n\nexport default SongList;\n","/Users/dallasclarke/Documents/Code-Immersives/Term-2/project/music-player/src/components/SongList/ListStyling.js",[],"/Users/dallasclarke/Documents/Code-Immersives/Term-2/project/music-player/src/components/CurrentSong/CurrentSong.js",["32"],{"ruleId":"33","severity":1,"message":"34","line":4,"column":15,"nodeType":"35","messageId":"36","endLine":4,"endColumn":20},{"ruleId":"33","severity":1,"message":"37","line":11,"column":8,"nodeType":"35","messageId":"36","endLine":11,"endColumn":23},{"ruleId":"33","severity":1,"message":"38","line":12,"column":8,"nodeType":"35","messageId":"36","endLine":12,"endColumn":19},{"ruleId":"39","severity":1,"message":"40","line":69,"column":6,"nodeType":"41","endLine":69,"endColumn":25,"suggestions":"42"},{"ruleId":"33","severity":1,"message":"43","line":16,"column":10,"nodeType":"35","messageId":"36","endLine":16,"endColumn":18},{"ruleId":"33","severity":1,"message":"44","line":16,"column":20,"nodeType":"35","messageId":"36","endLine":16,"endColumn":31},{"ruleId":"33","severity":1,"message":"45","line":31,"column":9,"nodeType":"35","messageId":"36","endLine":31,"endColumn":17},{"ruleId":"33","severity":1,"message":"37","line":5,"column":8,"nodeType":"35","messageId":"36","endLine":5,"endColumn":23},{"ruleId":"46","severity":1,"message":"47","line":17,"column":13,"nodeType":"48","endLine":17,"endColumn":51},"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'VirtualizedList' is defined but never used.","'defaultSong' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has an unnecessary dependency: 'hash.access_token'. Either exclude it or remove the dependency array. Outer scope values like 'hash.access_token' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["49"],"'songInfo' is assigned a value but never used.","'setSongInfo' is assigned a value but never used.","'playSong' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"50","fix":"51"},"Update the dependencies array to be: []",{"range":"52","text":"53"},[1809,1828],"[]"]